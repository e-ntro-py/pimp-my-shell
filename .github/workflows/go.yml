name: CI

on:
  push:
    tags:
      - '*'
  pull_request:

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install dependencies
        run: go get github.com/mattn/go-isatty@v0.0.16

      # Run build of the application
      - name: Run build
        run: |
          make -f MakeFile build

  test:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install dependencies
        run: go get github.com/mattn/go-isatty@v0.0.16

      # Run Tests
      - name: Tests
        run: |
          make -f MakeFile build
          make -f MakeFile test || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the original go test log as an artifact for later review.
      - name: Upload test log
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-log
          path: coverage/gotest.log
          if-no-files-found: error

  run-pimp-my-shell:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Go Build
        run: |
          go get github.com/mattn/go-isatty@v0.0.16
          make -f MakeFile build

      - name: Run pimp-my-shell
        run: |
          echo "::group::Pimp My Shell"
          ./pimp-my-shell
          echo "::endgroup::"
          echo "::group::Final ZSHRC"
          cat "$HOME/.zshrc"
          echo "::endgroup::"

  # ================
  # RELEASE JOB
  #   runs after a successful build
  #   only runs on push "v*" tag
  # ================
  release:
    needs: [build, test, run-pimp-my-shell]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
          cache: true

      - name: Install dependencies
        run: go get github.com/mattn/go-isatty@v0.0.16

      - name: Set GOPATH
        run: |
          echo "GOPATH=$(go env GOPATH)/bin" >> $GITHUB_ENV

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: pimp-my-shell
          path: dist/*
