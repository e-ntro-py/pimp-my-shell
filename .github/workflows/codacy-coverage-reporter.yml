name: codacy-coverage-reporter

on:
  push:
    tags:
      - '*'
  pull_request:

jobs:
  codacy-coverage-reporter:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-codacy-coverage-reporter-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-codacy-coverage-reporter-${{ env.cache-name }}-
            ${{ runner.OS }}-codacy-coverage-reporter-
            ${{ runner.OS }}-

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Remove broken apt repos [Ubuntu]
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04'

      # Install all the dependencies
      - name: Install dependencies
        run: |
          go version
          go install github.com/axw/gocov/gocov@latest
          go install github.com/AlekSi/gocov-xml@latest
          go get -u github.com/jstemmer/go-junit-report
          go get -u github.com/kyoh86/richgo
          sudo apt-get update -y || true

      # Run build of the application
      - name: Run build
        run: |
          make -f MakeFile build

      # Run Tests and Coverage
      - name: Run Tests and Coverage
        run: |
          go test -v -coverprofile=coverage.out ./... | tee >(richgo testfilter) | go-junit-report > coverage/${{ runner.OS }}-report.xml
          gocov convert coverage.out | gocov-xml > coverage/${{ runner.OS }}-report.xml

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/${{ runner.OS }}-report.xml